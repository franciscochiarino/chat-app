{"ast":null,"code":"import _slicedToArray from\"/home/fran/Documents/chat-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'emoji-mart/css/emoji-mart.css';import{Picker,Emoji}from'emoji-mart';import TextareaAutosize from'react-autosize-textarea';export default function Input(_ref){var text=_ref.text,setText=_ref.setText,sendMessage=_ref.sendMessage;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),emojiWindow=_useState2[0],setEmojiWindow=_useState2[1];var handleEmojiWindow=function handleEmojiWindow(){setEmojiWindow(!emojiWindow);};return/*#__PURE__*/React.createElement(React.Fragment,null,emojiWindow?/*#__PURE__*/React.createElement(Picker,{className:\"Picker\",set:\"apple\",theme:\"light\",style:{fontFamily:'initial'},onSelect:function onSelect(emoji){return setText(text+\" \".concat(emoji.native,\" \"));}}):null,/*#__PURE__*/React.createElement(\"div\",{className:\"Input\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:sendMessage,className:\"chat-form\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"emoji-btn\",onClick:handleEmojiWindow},/*#__PURE__*/React.createElement(Emoji,{emoji:{id:'grinning'},size:20})),/*#__PURE__*/React.createElement(TextareaAutosize,{className:\"textarea-autosize\",onKeyPress:function onKeyPress(e){return e.key==='Enter'?sendMessage(e):null;},style:{minHeight:20,maxHeight:70,resize:'none'},placeholder:\"Type a message...\",value:text,onChange:function onChange(e){return setText(e.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",onClick:function onClick(){return setEmojiWindow(false);}},\"Send\"))));}","map":{"version":3,"sources":["/home/fran/Documents/chat-app/client/src/components/input/Input.js"],"names":["React","useState","Picker","Emoji","TextareaAutosize","Input","text","setText","sendMessage","emojiWindow","setEmojiWindow","handleEmojiWindow","fontFamily","emoji","native","id","e","key","minHeight","maxHeight","resize","target","value"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,+BAAP,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,YAA9B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CAEA,cAAe,SAASC,CAAAA,KAAT,MAA+C,IAA9BC,CAAAA,IAA8B,MAA9BA,IAA8B,CAAxBC,OAAwB,MAAxBA,OAAwB,CAAfC,WAAe,MAAfA,WAAe,eACtBP,QAAQ,CAAC,KAAD,CADc,wCACrDQ,WADqD,eACxCC,cADwC,eAG5D,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9BD,cAAc,CAAC,CAACD,WAAF,CAAd,CACD,CAFD,CAIA,mBACE,wCACIA,WAAW,cACX,oBAAC,MAAD,EAAQ,SAAS,CAAC,QAAlB,CAA2B,GAAG,CAAC,OAA/B,CAAuC,KAAK,CAAC,OAA7C,CAAqD,KAAK,CAAE,CAACG,UAAU,CAAE,SAAb,CAA5D,CAAqF,QAAQ,CAAE,kBAAAC,KAAK,QAAIN,CAAAA,OAAO,CAACD,IAAI,YAAOO,KAAK,CAACC,MAAb,KAAL,CAAX,EAApG,EADW,CAEX,IAHJ,cAIE,2BAAK,SAAS,CAAC,OAAf,eACE,4BAAM,QAAQ,CAAEN,WAAhB,CAA6B,SAAS,CAAC,WAAvC,eACE,8BAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,WAAhC,CAA4C,OAAO,CAAEG,iBAArD,eAAwE,oBAAC,KAAD,EAAO,KAAK,CAAE,CAAEI,EAAE,CAAE,UAAN,CAAd,CAAiC,IAAI,CAAE,EAAvC,EAAxE,CADF,cAGE,oBAAC,gBAAD,EAAkB,SAAS,CAAC,mBAA5B,CACE,UAAU,CAAE,oBAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,GAAF,GAAU,OAAV,CAAoBT,WAAW,CAACQ,CAAD,CAA/B,CAAqC,IAAzC,EADf,CAEE,KAAK,CAAE,CAAEE,SAAS,CAAE,EAAb,CAAiBC,SAAS,CAAE,EAA5B,CAAgCC,MAAM,CAAE,MAAxC,CAFT,CAGE,WAAW,CAAC,mBAHd,CAIE,KAAK,CAAEd,IAJT,CAKE,QAAQ,CAAE,kBAACU,CAAD,QAAOT,CAAAA,OAAO,CAACS,CAAC,CAACK,MAAF,CAASC,KAAV,CAAd,EALZ,EAHF,cASE,8BAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAE,yBAAMZ,CAAAA,cAAc,CAAC,KAAD,CAApB,EAA/B,SATF,CADF,CAJF,CADF,CAoBD","sourcesContent":["import React, { useState } from 'react';\nimport 'emoji-mart/css/emoji-mart.css';\nimport { Picker, Emoji } from 'emoji-mart';\nimport TextareaAutosize from 'react-autosize-textarea';\n\nexport default function Input({ text, setText, sendMessage }) {\n  const [emojiWindow, setEmojiWindow] = useState(false);\n\n  const handleEmojiWindow = () => {\n    setEmojiWindow(!emojiWindow);\n  }\n\n  return (\n    <>\n      { emojiWindow ? \n        <Picker className=\"Picker\" set=\"apple\" theme=\"light\" style={{fontFamily: 'initial'}} onSelect={emoji => setText(text + ` ${emoji.native} `)} />\n      : null }\n      <div className=\"Input\">\n        <form onSubmit={sendMessage} className=\"chat-form\">\n          <button type=\"button\" className=\"emoji-btn\" onClick={handleEmojiWindow}><Emoji emoji={{ id: 'grinning'}} size={20} /></button>\n          {/* <input type=\"text\" placeholder=\"Type a message...\" value={text} onChange={(e) => setText(e.target.value)} /> */}\n          <TextareaAutosize className=\"textarea-autosize\" \n            onKeyPress={e => e.key === 'Enter' ? sendMessage(e) : null} \n            style={{ minHeight: 20, maxHeight: 70, resize: 'none' }} \n            placeholder=\"Type a message...\" \n            value={text} \n            onChange={(e) => setText(e.target.value)} />\n          <button type=\"submit\" onClick={() => setEmojiWindow(false)}>Send</button>\n        </form>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}