{"ast":null,"code":"var _jsxFileName = \"/home/fran/Documents/chat-app/client/src/Chat.js\";\nimport React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport InfoBar from './InfoBar';\nimport Input from './Input';\nimport Messages from './Messages';\nlet socket;\nexport default function Chat({\n  name,\n  room,\n  chatWindow,\n  setChatWindow\n}) {\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState([]); // Set server address\n\n  const endpoint = 'https://chat-app-fran.herokuapp.com/';\n  useEffect(() => {\n    console.log('[useEffect on Chat is running]'); // Connect to endpoint\n\n    socket = io(endpoint); // Emit JOIN\n\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        sessionStorage.removeItem('name');\n        alert(error);\n        window.location.reload();\n      }\n    });\n    return () => {\n      // Emit DISCONNECT\n      socket.emit('disconnect'); // Turn off this socket\n\n      socket.off();\n    };\n  }, [endpoint, sessionStorage, name, room]);\n  useEffect(() => {\n    // Recieve MESSAGE\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n\n    if (messages.length >= 50) {\n      removeFirst();\n    }\n  }, []);\n\n  const sendMessage = e => {\n    e.preventDefault();\n\n    if (text) {\n      // Emit SENDMESSAGE\n      socket.emit('sendMessage', text, () => {\n        setText('');\n      });\n    }\n  };\n\n  const removeFirst = () => {\n    const [first, ...rest] = messages;\n    return setMessages(rest);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outer-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfoBar, {\n    room: room,\n    chatWindow: chatWindow,\n    setChatWindow: setChatWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    text: text,\n    setText: setText,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/fran/Documents/chat-app/client/src/Chat.js"],"names":["React","useEffect","useState","io","InfoBar","Input","Messages","socket","Chat","name","room","chatWindow","setChatWindow","text","setText","messages","setMessages","endpoint","console","log","emit","error","sessionStorage","removeItem","alert","window","location","reload","off","on","message","length","removeFirst","sendMessage","e","preventDefault","first","rest"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAIC,MAAJ;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAAd,EAAyD;AACtE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC,CAFsE,CAItE;;AACA,QAAMe,QAAQ,GAAG,sCAAjB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EADc,CAEd;;AACAZ,IAAAA,MAAM,GAAGJ,EAAE,CAACc,QAAD,CAAX,CAHc,CAKd;;AACAV,IAAAA,MAAM,CAACa,IAAP,CAAY,MAAZ,EAAoB;AAACX,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAApB,EAAmCW,KAAD,IAAW;AAC3C,UAAIA,KAAJ,EAAW;AACTC,QAAAA,cAAc,CAACC,UAAf,CAA0B,MAA1B;AACAC,QAAAA,KAAK,CAACH,KAAD,CAAL;AACAI,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,KAND;AAQA,WAAO,MAAM;AACX;AACApB,MAAAA,MAAM,CAACa,IAAP,CAAY,YAAZ,EAFW,CAGX;;AACAb,MAAAA,MAAM,CAACqB,GAAP;AACD,KALD;AAMD,GApBQ,EAoBN,CAACX,QAAD,EAAWK,cAAX,EAA2Bb,IAA3B,EAAiCC,IAAjC,CApBM,CAAT;AAsBAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,MAAM,CAACsB,EAAP,CAAU,SAAV,EAAsBC,OAAD,IAAa;AAChCd,MAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAce,OAAd,CAAf,CAAX;AACD,KAFD;;AAGA,QAAIf,QAAQ,CAACgB,MAAT,IAAmB,EAAvB,EAA2B;AACzBC,MAAAA,WAAW;AACZ;AAEF,GATQ,EASN,EATM,CAAT;;AAWA,QAAMC,WAAW,GAAGC,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAItB,IAAJ,EAAU;AACR;AACAN,MAAAA,MAAM,CAACa,IAAP,CAAY,aAAZ,EAA2BP,IAA3B,EAAiC,MAAM;AACrCC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD,OAFD;AAGD;AACF,GARD;;AAUA,QAAMkB,WAAW,GAAG,MAAM;AACxB,UAAM,CAACI,KAAD,EAAQ,GAAGC,IAAX,IAAmBtB,QAAzB;AACA,WAAOC,WAAW,CAACqB,IAAD,CAAlB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE3B,IAAf;AAAqB,IAAA,UAAU,EAAEC,UAAjC;AAA6C,IAAA,aAAa,EAAEC,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEG,QAApB;AAA8B,IAAA,IAAI,EAAEN,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEI,IAAb;AAAmB,IAAA,OAAO,EAAEC,OAA5B;AAAqC,IAAA,WAAW,EAAEmB,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport InfoBar from './InfoBar';\nimport Input from './Input';\nimport Messages from './Messages';\n\nlet socket;\n\nexport default function Chat({ name, room, chatWindow, setChatWindow }) {\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // Set server address\n  const endpoint = 'https://chat-app-fran.herokuapp.com/';\n\n  useEffect(() => {\n    console.log('[useEffect on Chat is running]')\n    // Connect to endpoint\n    socket = io(endpoint);\n\n    // Emit JOIN\n    socket.emit('join', {name, room}, (error) => {\n      if (error) {\n        sessionStorage.removeItem('name');\n        alert(error);\n        window.location.reload()\n      }\n    });\n\n    return () => {\n      // Emit DISCONNECT\n      socket.emit('disconnect');\n      // Turn off this socket\n      socket.off();\n    }\n  }, [endpoint, sessionStorage, name, room])\n\n  useEffect(() => {\n    // Recieve MESSAGE\n    socket.on('message', (message) => {\n      setMessages((messages) => [...messages, message]);\n    })\n    if (messages.length >= 50) {\n      removeFirst();\n    }\n    \n  }, []);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    if (text) {\n      // Emit SENDMESSAGE\n      socket.emit('sendMessage', text, () => {\n        setText('');\n      })\n    }\n  };\n\n  const removeFirst = () => {\n    const [first, ...rest] = messages;\n    return setMessages(rest);\n  };\n\n  return (\n    <div className=\"outer-container\">\n      <div className=\"inner-container\">\n        <InfoBar room={room} chatWindow={chatWindow} setChatWindow={setChatWindow} />\n        <Messages messages={messages} name={name} />\n        <Input text={text} setText={setText} sendMessage={sendMessage} />\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}